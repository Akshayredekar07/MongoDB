

Assignment: 

quizdata.csv

To import data from csv file:
`````````````````````````````
 
 mongoimport --db quizdb --collection quiz --type csv --headerline --file quizdata.csv

 { _id: 2, name: 'TeamB', round: 1, points: 3, city: 'Bangalore' },
  { _id: 6, name: 'TeamB', round: 2, points: 10, city: 'Bangalore' },
  { _id: 7, name: 'TeamC', round: 2, points: 3, city: 'Chennai' },
  { _id: 8, name: 'TeamD', round: 2, points: 7, city: 'Hyderabad' },
  { _id: 9, name: 'TeamA', round: 3, points: 10, city: 'Hyderabad' },
  { _id: 10, name: 'TeamB', round: 3, points: 4, city: 'Bangalore' },
  { _id: 5, name: 'TeamA', round: 2, points: 5, city: 'Hyderabad' },
  { _id: 11, name: 'TeamC', round: 3, points: 1, city: 'Chennai' },
  { _id: 12, name: 'TeamD', round: 3, points: 5, city: 'Hyderabad' },
  { _id: 1, name: 'TeamA', round: 1, points: 5, city: 'Hyderabad' },
  { _id: 13, name: 'TeamA', round: 4, points: 8, city: 'Hyderabad' },
  { _id: 14, name: 'TeamB', round: 4, points: 7, city: 'Bangalore' },
  { _id: 15, name: 'TeamC', round: 4, points: 7, city: 'Chennai' },
  { _id: 16, name: 'TeamD', round: 4, points: 9, city: 'Hyderabad' },
  { _id: 3, name: 'TeamC', round: 1, points: 4, city: 'Chennai' },
  { _id: 4, name: 'TeamD', round: 1, points: 5, city: 'Hyderabad' }

 Q1. To find TeamA total number of points in all 4 rounds?

db.quiz.aggregate([
    {$match: {name: "TeamA"}},
    {$group: {_id: "$name", totalScore: {$sum: "$points"}}}
 ]);

```
[ { _id: 'TeamA', totalScore: 28 } ]
```

Q2. to find the average score of TeamA per round?

db.quiz.aggregate([
    {$match: {name: "TeamA"}},
    {$group: {_id: "$name", avgScore: {$avg: "$points"}}},
    {$project: {_id:0, avgScore: 1}}
 ]);

 [ { avgScore: 7 } ]


 Q3. to find total score of Hyderabad Teams?

db.quiz.aggregate([  
    { $match: { city: "Hyderabad" } },  
    { $group: { _id: null, totalScore: { $sum: "$points" } } },  
    { $project: { _id: 0, totalScore: 1 } }  
])

```
[ { totalScore: 54 } ]
```

Q4. To find winner team name?
teamwise totalScore, sort in descending order based on totalScore, limit to 1 display team name 

db.quiz.aggregate([
    { $group: { _id: "$name", totalScore: { $sum: "$points" } } },
    {$sort: {totalScore: -1}},
    {$limit: 1}
])


```
quizdb> db.quiz.aggregate([
...     { $group: { _id: "$name", totalScore: { $sum: "$points" } } },
...     {$sort: {totalScore: -1}},
...     {$limit: 1}
... ])
[ { _id: 'TeamA', totalScore: 28 } ]
```

Q5. to find  2nd position team name(Runner up)?

quizdb> db.quiz.aggregate([
...     { $group: { _id: "$name", totalScore: { $sum: "$points" } } },
...     {$sort: {totalScore: -1}}
... ])
[
  { _id: 'TeamA', totalScore: 28 },
  { _id: 'TeamD', totalScore: 26 },
  { _id: 'TeamB', totalScore: 24 },
  { _id: 'TeamC', totalScore: 15 }
]


db.quiz.aggregate([
    { $group: { _id: "$name", totalScore: { $sum: "$points" } } },
    {$sort: {totalScore: -1}},
    {$skip: 1},
    {$limit: 1}
])

quizdb> db.quiz.aggregate([
...     { $group: { _id: "$name", totalScore: { $sum: "$points" } } },
...     {$sort: {totalScore: -1}},
...     {$skip: 1},
...     {$limit: 1}
... ])
[ { _id: 'TeamD', totalScore: 26 } ]

Q6. To find team name with least score?


db.quiz.aggregate([
{ $group: { _id: "$name", totalScore: { $sum: "$points" } } },
{$sort: {totalScore: 1}},
{$limit: 1}
])


```
quizdb> db.quiz.aggregate([
... { $group: { _id: "$name", totalScore: { $sum: "$points" } } },
... {$sort: {totalScore: 1}},
... {$limit: 1}
... ])
[ { _id: 'TeamC', totalScore: 15 } ]
```


Q7. To find total points of winner team?

db.quiz.aggregate([
    { $group: { _id: "$name", totalScore: { $sum: "$points" } } },
    {$sort: {totalScore: -1}},
    {$limit: 1},
    {$project: {_id:0, totalScore:1}}
])

```
[ { totalScore: 28 } ]
```


Q8. to find teamwise score?

db.quiz.aggregate([
    { $group: { _id: "$name", totalScore: { $sum: "$points" } } },
    {$sort: {name: 1}},
])

```
{ _id: 'TeamC', totalScore: 15 },
  { _id: 'TeamD', totalScore: 26 },
  { _id: 'TeamB', totalScore: 24 },
  { _id: 'TeamA', totalScore: 28 }
```


Q9. Show only winning Team and city?

db.quiz.aggregate([
    { $group: { _id: "$name", city: {$first:"$city"}, totalScore: { $sum: "$points" } } },
    {$sort: {totalScore: -1}},
    {$limit: 1},
    {$project: {_id:0, name: "$_id", totalScore:1, city: 1,}}
])

```
quizdb> db.quiz.aggregate([
...     { $group: { _id: "$name", city: {$first:"$city"}, totalScore: { $sum: "$points" } } },
...     {$sort: {totalScore: -1}},
...     {$limit: 1},
...     {$project: {_id:0, name: "$_id", totalScore:1, city: 1,}}
... ])
[ { city: 'Hyderabad', totalScore: 28, name: 'TeamA' } ]
```


Q10. to find teamwise avg score in ascending order?

db.quiz.aggregate([
{ $group: { _id: "$name", avgScore: { $sum: "$points" } } },
{$sort: {avgScore: -1}},
{$limit: 1},
{$project: {_id:0, name: "$_id", avgScore:1, city: 1,}}
])


Q11. To find teamwise total score in descending order? 

db.quiz.aggregate([
    {$group: {_id: "$name", totalScore: {$sum: "$points"}}},
    {$sort: {totalScore: -1}}
])

Q12. To find teamwise total score and arrange according to alphabetiacal order of city names, If two cities with same then arrange according to ascending order and write to citywisetotal collection?

db.quiz.aggregate([
    {$group: {_id:"$name", city:{$first: "$city"}, totalScore: {$sum: "$points"} }},
    {$sort: {city:1, totalScore:1}},
    {$out: "citywisetotal"}
])

```
quizdb> db.quiz.aggregate([
...     {$group: {_id:"$name", city:{$first: "$city"}, totalScore: {$sum: "$points"} }},
...     {$sort: {city:1, totalScore:1}},
...     {$out: "citywisetotal"}
... ])


quizdb> show collections
citywisetotal
quiz
quizdb> db.citywisetotal.find()
[
  { _id: 'TeamB', city: 'Bangalore', totalScore: 24 },
  { _id: 'TeamC', city: 'Chennai', totalScore: 15 },
  { _id: 'TeamD', city: 'Hyderabad', totalScore: 26 },
  { _id: 'TeamA', city: 'Hyderabad', totalScore: 28 }
]
```

Note: Within the same pipeline we can use same stage multiple times also.


db.quiz.aggregate([
    { $group: { _id: "$name", city: {$first:"$city"}, totalScore: { $sum: "$points" } } }
])

After first group stage:
````````````````````````
[
  { _id: 'TeamD', city: 'Hyderabad', totalScore: 26 },
  { _id: 'TeamA', city: 'Hyderabad', totalScore: 28 },
  { _id: 'TeamB', city: 'Bangalore', totalScore: 24 },
  { _id: 'TeamC', city: 'Chennai', totalScore: 15 }
]
```

db.quiz.aggregate([
    { $group: { _id: "$name", city: {$first:"$city"}, totalScore: { $sum: "$points" } } },
    {$group: {_id: "$city", cityWiseScore: {$sum: "$totalScore"}}}
])

After second group stage:
```````````````````````````

```
[
  { _id: 'Hyderabad', cityWiseScore: 54 },
  { _id: 'Bangalore', cityWiseScore: 24 },
  { _id: 'Chennai', cityWiseScore: 15 }
]
```

After third stage:
``````````````````
db.quiz.aggregate([
    { $group: { _id: "$name", city: {$first:"$city"}, totalScore: { $sum: "$points" } } },
    {$group: {_id: "$city", cityWiseScore: {$sum: "$totalScore"}}},
    {$group: {_id:null, allCitiesScores:{$sum: "$cityWiseScore"} }},
    {$project: {_id: 0}}
])

```
[ { allCitiesScores: 93 } ]
```

